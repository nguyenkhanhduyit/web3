/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SwapDex, SwapDexInterface } from "../../contracts/SwapDex";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    inputs: [],
    name: "FEE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SWAP_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Desired",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAllUserSwapHistory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct SwapDex.SwapHistory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getPoolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price0to1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price1to0",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapIndex",
        type: "uint256",
      },
    ],
    name: "getSwapDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct SwapDex.SwapHistory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSwapCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSwapCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getUserSwapHistory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenIn",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenOut",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountOut",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct SwapDex.SwapHistory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "uint256",
        name: "reserve0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserve1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapHistory",
    outputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userSwapIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576119ec908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80630ddd03ba14610fb4578063486e51f414610ea95780634aa0665214610e095780634b916e6714610c6757806353b609b514610bc7578063619db68814610b45578063715e86b514610b0b578063768aebde14610aef578063901754d714610a83578063a7ff350c1461096c578063ac41865a14610938578063b2109e2f146108a9578063bdedcbc0146101f8578063cf6c62ea146105ae578063d52bb6f414610534578063d6bd603c14610498578063d73792a91461047b578063d752fab2146101fd578063df791e50146101f8578063ea526de71461018a578063ec0193c1146101315763ed11da2a1461010e57600080fd5b3461012c57600036600319011261012c576020600154604051908152f35b600080fd5b3461012c57604036600319011261012c5761014a611070565b6001600160a01b031660009081526002602052604090208054602435919082101561012c5760209161017b916112fc565b90549060031b1c604051908152f35b3461012c57604036600319011261012c576101a3611070565b6101ab611086565b906001600160a01b0380831690821610156101f2575b6001600160a01b03908116600090815260208181526040808320949093168252928352819020600201549051908152f35b906101c1565b61116b565b3461012c5761020b3661109c565b90916001600160a01b038084169082166102278183141561135f565b6102328415156116e4565b1015610475575b6001600160a01b03908116600081815260208181526040808320948716835293815283822033835260038101918290529390912054919492939092909182116104305761028784548361132c565b60028501946102988654809361133f565b956102b160018301936102ac85548861132c565b61133f565b9587151580610427575b6102c4906116e4565b60018060a01b03331660005260205260406000206102e3868254611608565b90556102f0858254611608565b90556102fd868254611608565b905561030a848254611608565b905560405163a9059cbb60e01b81523360048201526024810185905260208160448160008a5af180156103fe5761040a575b5060405163a9059cbb60e01b815233600482015260248101849052946001600160a01b0391909116906020866044816000865af19586156103fe576040966103d1575b507faa29d8bbadb22be3bb6dbe493ae8a0f5b6bba22ed4da0ab6c4808bab559de8358651806103c23396888a846040919493926060820195825260208201520152565b0390a482519182526020820152f35b6103f29060203d6020116103f7575b6103ea81836114b0565b8101906114d2565b61037f565b503d6103e0565b6040513d6000823e3d90fd5b6104229060203d6020116103f7576103ea81836114b0565b61033c565b508615156102bb565b60405162461bcd60e51b815260206004820152601e60248201527f494e53554646494349454e545f4c49515549444954595f42414c414e434500006044820152606490fd5b91610239565b3461012c57600036600319011261012c5760206040516103e88152f35b3461012c57606036600319011261012c576104b1611070565b6104b9611086565b604435906001600160a01b038216820361012c576003926001600160a01b03828116908216101561052e575b60018060a01b0316600052600060205260406000209060018060a01b031660005260205260406000209060018060a01b0316600052016020526020604060002054604051908152f35b906104e5565b3461012c57604036600319011261012c5761054d611070565b610555611086565b906001600160a01b0380831690821610156105a8575b60018060a01b0316600052600060205260406000209060018060a01b03166000526020526040806000206001815491015482519182526020820152f35b9061056b565b3461012c57608036600319011261012c576105c7611070565b6105cf611086565b6064356044356001600160a01b038381169085166105ef8183141561135f565b821515806108a0575b610601906113a1565b1093841561089a5792935b156108945790915b6001600160a01b03908116600081815260208181526040808320948816835293815283822093516323b872dd60e01b815233600482015230602482015260448101869052939692939182906064908290875af180156103fe57610877575b506040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b039190911691906020816064816000875af180156103fe5761085a575b50600285018054959086610816576106cf868661132c565b600060038211156108085750808060011c600181018091116107f257905b8282106107d35750505b955b861561078e57600383889361074f8560209c6107378c7fa7c0bc175494aac705fdccdb501213f94fb9a6f1dd9be0b3488298cb2dc160889a546115fb565b8555600185016107488882546115fb565b90556115fb565b90553360009081529101895260409020805461076c9084906115fb565b90556040805196875260208701919091528501523393606090a4604051908152f35b60405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e5445440000006044820152606490fd5b9091506107e9826107e4818461133f565b6115fb565b60011c906106ed565b634e487b7160e01b600052601160045260246000fd5b90156106f7575060016106f7565b61082b610823888761132c565b83549061133f565b610843610838898961132c565b60018501549061133f565b8082101561085357505b956106f9565b905061084d565b6108729060203d6020116103f7576103ea81836114b0565b6106b7565b61088f9060203d6020116103f7576103ea81836114b0565b610672565b91610614565b9361060c565b508315156105f8565b3461012c57602036600319011261012c576004356108c5611502565b506001548110156108f3576108e46108de60e09261103b565b5061159d565b6108f160405180926110d6565bf35b60405162461bcd60e51b815260206004820152601860248201527f5377617020696e646578206f7574206f6620626f756e647300000000000000006044820152606490fd5b3461012c57604036600319011261012c576020610964610956611070565b61095e611086565b90611615565b604051908152f35b3461012c57606036600319011261012c57610985611070565b6001600160a01b031660009081526002602052604090208054602435919080831015610a3e57826109cb916109bc604435836115fb565b90808211610a36575b50611608565b906109d582611539565b9260005b8381106109f257604051806109ee8782611127565b0390f35b80610a1a6108de610a0e610a08600195876115fb565b876112fc565b90549060031b1c61103b565b610a248288611589565b52610a2f8187611589565b50016109d9565b9050856109c5565b60405162461bcd60e51b815260206004820152601960248201527f537461727420696e646578206f7574206f6620626f756e6473000000000000006044820152606490fd5b3461012c57604036600319011261012c576040610a9e611070565b610aa6611086565b6001600160a01b03918216600090815260208181528482209290931681529082529190912080546001820154600290920154604080519283529382019290925291820152606090f35b3461012c57600036600319011261012c57602060405160038152f35b3461012c57602036600319011261012c576001600160a01b03610b2c611070565b1660005260026020526020604060002054604051908152f35b3461012c57602036600319011261012c576001600160a01b03610b66611070565b16600052600260205260406000208054610b7f81611539565b9160005b828110610b9857604051806109ee8682611127565b80610bab6108de610a0e600194866112fc565b610bb58287611589565b52610bc08186611589565b5001610b83565b3461012c576020610c46610bda3661109c565b916001600160a01b03828116908216610bf58183141561135f565b610c00851515611432565b1015610c5e57604082825b6001600160a01b039081166000908152808952838120929091168152908752208054909390151580610c51575b610c41906113ed565b6117a4565b6109648115156113a1565b5060018401541515610c38565b60408183610c0b565b3461012c57610c753661109c565b6001600160a01b03828116908416610c8f8183141561135f565b610c9a831515611432565b81811015610e0057604084865b60018060a01b031660005260006020528160002060009160018060a01b0316825260205220938454151580610df3575b610ce0906113ed565b610cec858288876117a4565b94610cf88615156113a1565b6040516323b872dd60e01b815233600482015230602482015260448101879052906020826064816000885af19182156103fe57610d3e92610dd6575b5082888789611810565b60405163a9059cbb60e01b815233600482015260248101859052956020876044816000885af19687156103fe5786610d8293879260209a610dbb575b503393611865565b60405192848452858401527fb39c9bc43f811e1a7ce159c5f147458fdb80266bf23c17322013316e27e086d060403394a4604051908152f35b610dd1908b3d8d116103f7576103ea81836114b0565b610d7a565b610dee9060203d6020116103f7576103ea81836114b0565b610d34565b5060018501541515610cd7565b60408585610ca7565b3461012c576020610e88610e1c3661109c565b916001600160a01b03828116908216610e378183141561135f565b610e428515156113a1565b1015610ea057604082825b6001600160a01b039081166000908152808952838120929091168152908752208054909390151580610e93575b610e83906113ed565b611730565b610964811515611432565b5060018401541515610e7a565b60408183610e4d565b3461012c57604036600319011261012c57610ec2611070565b610eca611086565b6000916001600160a01b038281169082161015610fae575b60018060a01b0316825281602052604082209060018060a01b031682526020526040812080549060026001820154910154821593841580610fa5575b15610f985750670de0b6b3a76400008202828104670de0b6b3a764000014831517156107f25783610f4e9161133f565b90670de0b6b3a7640000840294848604670de0b6b3a76400001417156107f257610f7a8360a09661133f565b925b6040519485526020850152604084015260608301526080820152f35b60a0945090600092610f7c565b50821515610f1e565b90610ee2565b3461012c57602036600319011261012c5760043560015481101561012c57610fdd60e09161103b565b50805460018201546002830154600384015460048501546005860154600690960154604080516001600160a01b0397881681529587166020870152850193909352606084019190915260808301529190921660a083015260c0820152f35b60015481101561105a5760016000526007602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b038216820361012c57565b602435906001600160a01b038216820361012c57565b606090600319011261012c576004356001600160a01b038116810361012c57906024356001600160a01b038116810361012c579060443590565b80516001600160a01b03908116835260208083015182169084015260408083015190840152606080830151908401526080808301519084015260a0808301519091169083015260c090810151910152565b602060408183019282815284518094520192019060005b81811061114b5750505090565b909192602060e08261116060019488516110d6565b01940192910161113e565b3461012c576111793661109c565b6000916001600160a01b0380821691908516906111988284141561135f565b6111a38415156113a1565b828210156112f55780865b60018060a01b0316865285602052604086209060018060a01b03168652602052604085209485541515806112e8575b6111e6906113ed565b6040516323b872dd60e01b8152336004820152306024820152604481018690529060208260648184885af19081156112dc57506112bf575b5061124361122e86838988611730565b9561123a871515611432565b82888888611810565b60405163a9059cbb60e01b815233600482015260248101869052956020876044816000885af19687156103fe578561128693889260209a610dbb57503393611865565b60405192835283858401527fb39c9bc43f811e1a7ce159c5f147458fdb80266bf23c17322013316e27e086d060403394a4604051908152f35b6112d79060203d6020116103f7576103ea81836114b0565b61121e565b604051903d90823e3d90fd5b50600186015415156111dd565b85816111ae565b805482101561105a5760005260206000200190600090565b906103e58202918083046103e514901517156107f257565b818102929181159184041417156107f257565b8115611349570490565b634e487b7160e01b600052601260045260246000fd5b1561136657565b60405162461bcd60e51b81526020600482015260136024820152724944454e544943414c5f41444452455353455360681b6044820152606490fd5b156113a857565b60405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f494e5055545f414d4f554e54000000000000006044820152606490fd5b156113f457565b60405162461bcd60e51b8152602060048201526016602482015275494e53554646494349454e545f4c495155494449545960501b6044820152606490fd5b1561143957565b60405162461bcd60e51b815260206004820152601a60248201527f494e53554646494349454e545f4f55545055545f414d4f554e540000000000006044820152606490fd5b60e0810190811067ffffffffffffffff82111761149a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761149a57604052565b9081602091031261012c5751801515810361012c5790565b67ffffffffffffffff811161149a5760051b60200190565b6040519061150f8261147e565b600060c0838281528260208201528260408201528260608201528260808201528260a08201520152565b90611543826114ea565b61155060405191826114b0565b8281528092611561601f19916114ea565b019060005b82811061157257505050565b60209061157d611502565b82828501015201611566565b805182101561105a5760209160051b010190565b906040516115aa8161147e565b82546001600160a01b03908116825260018401548116602083015260028401546040830152600384015460608301526004840154608083015260058401541660a082015260069092015460c0830152565b919082018092116107f257565b919082039182116107f257565b6001600160a01b03808316908216109160409183156116de575b6001600160a01b039081166000908152602081815284822093909216815291905220805490918115908180156116d2575b6116c9571561169d5750906001015490670de0b6b3a7640000820291808304670de0b6b3a764000014901517156107f25761169a9161133f565b90565b670de0b6b3a76400008202918204670de0b6b3a76400001417156107f257600161169a9201549061133f565b50505050600090565b50600184015415611660565b9061162f565b156116eb57565b60405162461bcd60e51b815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4255524e45440000006044820152606490fd5b61173c90939293611314565b926001600160a01b0390811691161090811561179a5761176160018201545b8461132c565b911561179157545b6103e88102908082046103e814901517156107f25761169a9261178b916115fb565b9061133f565b60010154611769565b611761815461175b565b6001600160a01b039283169190921610906117c690821561180657835461132c565b906103e88202918083046103e814901517156107f2576117f29261178b91156118005760010154611314565b600181018091116107f25790565b54611314565b600184015461132c565b90939290916001600160a01b0391821691161015611848578161183960019261184494546115fb565b815501918254611608565b9055565b918161185a6001926118449454611608565b8155019182546115fb565b91909293604051926118768461147e565b60018060a01b03168352602083019360018060a01b0316845260408301918252606083019485526080830142815260a084019160018060a01b03169586835260c0850193438552600154600160401b81101561149a578060016118dc920160015561103b565b9790976119a057955187546001600160a01b03199081166001600160a01b039283161789559651600189810180548a169284169290921790915591516002808a0191909155925160038901559251600488015592516005870180549096169216919091179093559051600693909301929092556000928352602052604090912090546000198101919082116107f2578054600160401b81101561149a57611988916001820181556112fc565b819291549060031b91821b91600019901b1916179055565b634e487b7160e01b600052600060045260246000fdfea26469706673582212200a14e8391442a79652ffe8fef21358b573da3ce26ff6f2bc6358fee6a8490ac564736f6c634300081c0033";

type SwapDexConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapDexConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapDex__factory extends ContractFactory {
  constructor(...args: SwapDexConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapDex> {
    return super.deploy(overrides || {}) as Promise<SwapDex>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SwapDex {
    return super.attach(address) as SwapDex;
  }
  override connect(signer: Signer): SwapDex__factory {
    return super.connect(signer) as SwapDex__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapDexInterface {
    return new utils.Interface(_abi) as SwapDexInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapDex {
    return new Contract(address, _abi, signerOrProvider) as SwapDex;
  }
}
