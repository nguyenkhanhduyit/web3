/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenApprover,
  TokenApproverInterface,
} from "../../../contracts/ApproveToken.sol/TokenApprover";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460155761012c908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c63da3e339714602657600080fd5b3460c957606036600319011260c9576004356001600160a01b0381169081900360c9576024356001600160a01b038116919082900360c9576044836000819360209563095ea7b360e01b84526004840152833560248401525af1801560ea57608a57005b60203d60201160e4575b601f8101601f1916820167ffffffffffffffff81118382101760ce5760209183916040528101031260c957518015150360c957005b600080fd5b634e487b7160e01b600052604160045260246000fd5b503d6094565b6040513d6000823e3d90fdfea26469706673582212207a9414465925228f0cca59c234387a19e26e5be854038cb441ebc3a97a0c958c64736f6c634300081c0033";

type TokenApproverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenApproverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenApprover__factory extends ContractFactory {
  constructor(...args: TokenApproverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenApprover> {
    return super.deploy(overrides || {}) as Promise<TokenApprover>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenApprover {
    return super.attach(address) as TokenApprover;
  }
  override connect(signer: Signer): TokenApprover__factory {
    return super.connect(signer) as TokenApprover__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenApproverInterface {
    return new utils.Interface(_abi) as TokenApproverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenApprover {
    return new Contract(address, _abi, signerOrProvider) as TokenApprover;
  }
}
