/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Faucet,
  FaucetInterface,
} from "../../../contracts/Faucet.sol/Faucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "FaucetAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FaucetUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "FAUCET_COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "faucetAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTimeUntilNextFaucet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastFaucetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAllFaucets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "requestFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "updateFaucetAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346075573315605f5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610eab908161007b8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816314c47fbd14610b99575080631f69565f14610a465780632a707541146108fa5780633e6a099c146108205780635fa7b584146106fd578063715018a6146106a45780637bc1f6cc1461066a5780637d1d5d191461064c5780638da5cb5b1461062357806395ccea671461057a578063af81c5b914610424578063c6255626146103e2578063d3c7c2c714610316578063e21430d3146102eb578063f2fde38b146102625763ffc80e55146100cf57600080fd5b3461025d57600036600319011261025d57600354156102225733600052600160205260406000205462015180810180911161020c5761011090421015610d36565b3360005260016020524260406000205560005b60035481101561020a5761013681610c2d565b905460039190911b1c6001600160a01b031660008181526002602052604090205491908261016a575b506001915001610123565b60405163a9059cbb60e01b815233600482015260248101849052926020846044816000865af19384156101fe576001946101d2575b506040519081527f45c201a59ac545000ead84f30b2db67da23353aa1d58ac522c48505412143ffa60203392a33861015f565b6101f29060203d81116101f7575b6101ea8183610c5e565b810190610d95565b61019f565b503d6101e0565b6040513d6000823e3d90fd5b005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b81526020600482015260136024820152724e6f20746f6b656e7320617661696c61626c6560681b6044820152606490fd5b600080fd5b3461025d57602036600319011261025d5761027b610bcf565b610283610e4c565b6001600160a01b031680156102d557600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461025d57602036600319011261025d57602061030e610309610bcf565b610df9565b604051908152f35b3461025d57600036600319011261025d576040518060206003549283815201809260036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9060005b8181106103c35750505081610377910382610c5e565b6040519182916020830190602084525180915260408301919060005b8181106103a1575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610393565b82546001600160a01b0316845260209093019260019283019201610361565b3461025d57602036600319011261025d5760043560035481101561025d5761040b602091610c2d565b905460405160039290921b1c6001600160a01b03168152f35b3461025d57604036600319011261025d5761043d610bcf565b602435610448610e4c565b6001600160a01b0382169161045e831515610cf2565b610469821515610dad565b600354906000805b838110610547575b50156104bd575b837ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c602085836000526002825280604060002055604051908152a2005b9091680100000000000000008310156105315761052b6020926105078560017ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c9701600355610c2d565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b91610480565b634e487b7160e01b600052604160045260246000fd5b8561055182610c2d565b905460039190911b1c6001600160a01b03161461057057600101610471565b5050600185610479565b3461025d57604036600319011261025d576105fb6020610598610bcf565b602435906105a4610e4c565b6001600160a01b03166105b8811515610cf2565b6105c3821515610dad565b6000805460405163a9059cbb60e01b81526001600160a01b039091166004820152602481019390935291938492839182906044820190565b03925af180156101fe5761060b57005b61020a9060203d6020116101f7576101ea8183610c5e565b3461025d57600036600319011261025d576000546040516001600160a01b039091168152602090f35b3461025d57600036600319011261025d576020604051620151808152f35b3461025d57602036600319011261025d576001600160a01b0361068b610bcf565b1660005260016020526020604060002054604051908152f35b3461025d57600036600319011261025d576106bd610e4c565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461025d57602036600319011261025d57610716610bcf565b61071e610e4c565b6001600160a01b0316610732811515610cf2565b60005b6003549081811015610819578261074b82610c2d565b905460039190911b1c6001600160a01b03161461076c576001915001610735565b600019820191821161020c5761050761078761079f93610c2d565b905460039190911b1c6001600160a01b031691610c2d565b600354801561080357600019016107b581610c2d565b81546001600160a01b03600392831b1b1916909155555b806000526002602052600060408120557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3600080a2005b634e487b7160e01b600052603160045260246000fd5b50506107cc565b3461025d57604036600319011261025d57610839610bcf565b60243590610845610e4c565b6001600160a01b03169061085a821515610cf2565b610865811515610dad565b816000526002602052604060002054156108b55760207f4aa1b13eb889e81dc57ed88a5ff965bca06398336b3b226039dfeb6348679f7391836000526002825280604060002055604051908152a2005b60405162461bcd60e51b815260206004820152601860248201527f546f6b656e206e6f7420696e20666175636574206c69737400000000000000006044820152606490fd5b3461025d57602036600319011261025d576001600160a01b0361091b610bcf565b16610927811515610cf2565b80600052600260205260406000205415610a015733600052600160205260406000205462015180810180911161020c5761096390421015610d36565b3360008181526001602090815260408083204290558483526002825280832054905163a9059cbb60e01b8152600481019490945260248401819052929182906044908290875af180156101fe576109e4575b506040519081527f45c201a59ac545000ead84f30b2db67da23353aa1d58ac522c48505412143ffa60203392a3005b6109fc9060203d6020116101f7576101ea8183610c5e565b6109b5565b60405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206e6f7420617661696c61626c6520696e206661756365740000006044820152606490fd5b3461025d57602036600319011261025d57610a5f610bcf565b6001600160a01b03166000818152600260205260408082205490516395d89b4160e01b815290918082600481875afa90918282610b7c575b5050610b71575060046000604051610ab0604082610c5e565b60078152662aa725a727aba760c91b6020820152935b6040516306fdde0360e01b815292839182905afa60009181610b4c575b50610b435750610b3f604051610afa604082610c5e565b600d81526c2ab735b737bbb7102a37b5b2b760991b60208201525b610b316040519485948552606060208601526060850190610c08565b908382036040850152610c08565b0390f35b610b3f90610b15565b610b6a9192503d806000833e610b628183610c5e565b810190610c80565b9084610ae3565b600060049193610ac6565b610b919293503d8091833e610b628183610c5e565b908480610a97565b3461025d57602036600319011261025d576020906001600160a01b03610bbd610bcf565b16600052600282526040600020548152f35b600435906001600160a01b038216820361025d57565b60005b838110610bf85750506000910152565b8181015183820152602001610be8565b90602091610c2181518092818552858086019101610be5565b601f01601f1916010190565b600354811015610c4857600360005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761053157604052565b60208183031261025d5780519067ffffffffffffffff821161025d570181601f8201121561025d57805167ffffffffffffffff81116105315760405192610cd1601f8301601f191660200185610c5e565b8184526020828401011161025d57610cef9160208085019101610be5565b90565b15610cf957565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b15610d3d57565b60405162461bcd60e51b815260206004820152602a60248201527f4d757374207761697420323420686f757273206265747765656e2066617563656044820152697420726571756573747360b01b6064820152608490fd5b9081602091031261025d5751801515810361025d5790565b15610db457565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b6001600160a01b03166000908152600160205260409020548015610e46576201518081019081811161020c5781421015610e3f57429003620151800190811161020c5790565b5050600090565b50600090565b6000546001600160a01b03163303610e6057565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212209505e55f1158d415ca9e5c36f360e6a74c88a67e2ea51b988930f258fddcd88664736f6c634300081c0033";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
