/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Faucet,
  FaucetInterface,
} from "../../../contracts/Faucet.sol/Faucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "FaucetAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FaucetUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "FAUCET_COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "faucetAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTimeUntilNextFaucet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastFaucetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAllFaucets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "requestFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "updateFaucetAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346075573315605f5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610e88908161007b8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816314c47fbd14610b76575080631f69565f14610a235780632a707541146108d75780633e6a099c146107fd5780635fa7b584146106da578063715018a6146106815780637bc1f6cc146106475780637d1d5d19146106295780638da5cb5b1461060057806395ccea6714610557578063c625562614610515578063d3c7c2c714610449578063d48bfca714610316578063e21430d3146102eb578063f2fde38b146102625763ffc80e55146100cf57600080fd5b3461025d57600036600319011261025d57600354156102225733600052600160205260406000205462015180810180911161020c5761011090421015610d13565b3360005260016020524260406000205560005b60035481101561020a5761013681610c0a565b905460039190911b1c6001600160a01b031660008181526002602052604090205491908261016a575b506001915001610123565b60405163a9059cbb60e01b815233600482015260248101849052926020846044816000865af19384156101fe576001946101d2575b506040519081527f45c201a59ac545000ead84f30b2db67da23353aa1d58ac522c48505412143ffa60203392a33861015f565b6101f29060203d81116101f7575b6101ea8183610c3b565b810190610d72565b61019f565b503d6101e0565b6040513d6000823e3d90fd5b005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b81526020600482015260136024820152724e6f20746f6b656e7320617661696c61626c6560681b6044820152606490fd5b600080fd5b3461025d57602036600319011261025d5761027b610bac565b610283610e29565b6001600160a01b031680156102d557600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461025d57602036600319011261025d57602061030e610309610bac565b610dd6565b604051908152f35b3461025d57602036600319011261025d5761032f610bac565b610337610e29565b6001600160a01b0381169061034d821515610ccf565b600354906000805b838110610416575b50156103b1575b828060005260026020526706f05b59d3b200006040600020557ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c60206040516706f05b59d3b200008152a2005b68010000000000000000821015610400576103d58260016103f99401600355610c0a565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8180610364565b634e487b7160e01b600052604160045260246000fd5b8461042082610c0a565b905460039190911b1c6001600160a01b03161461043f57600101610355565b505060018461035d565b3461025d57600036600319011261025d576040518060206003549283815201809260036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9060005b8181106104f657505050816104aa910382610c3b565b6040519182916020830190602084525180915260408301919060005b8181106104d4575050500390f35b82516001600160a01b03168452859450602093840193909201916001016104c6565b82546001600160a01b0316845260209093019260019283019201610494565b3461025d57602036600319011261025d5760043560035481101561025d5761053e602091610c0a565b905460405160039290921b1c6001600160a01b03168152f35b3461025d57604036600319011261025d576105d86020610575610bac565b60243590610581610e29565b6001600160a01b0316610595811515610ccf565b6105a0821515610d8a565b6000805460405163a9059cbb60e01b81526001600160a01b039091166004820152602481019390935291938492839182906044820190565b03925af180156101fe576105e857005b61020a9060203d6020116101f7576101ea8183610c3b565b3461025d57600036600319011261025d576000546040516001600160a01b039091168152602090f35b3461025d57600036600319011261025d576020604051620151808152f35b3461025d57602036600319011261025d576001600160a01b03610668610bac565b1660005260016020526020604060002054604051908152f35b3461025d57600036600319011261025d5761069a610e29565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461025d57602036600319011261025d576106f3610bac565b6106fb610e29565b6001600160a01b031661070f811515610ccf565b60005b60035490818110156107f6578261072882610c0a565b905460039190911b1c6001600160a01b031614610749576001915001610712565b600019820191821161020c576103d561076461077c93610c0a565b905460039190911b1c6001600160a01b031691610c0a565b60035480156107e0576000190161079281610c0a565b81546001600160a01b03600392831b1b1916909155555b806000526002602052600060408120557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3600080a2005b634e487b7160e01b600052603160045260246000fd5b50506107a9565b3461025d57604036600319011261025d57610816610bac565b60243590610822610e29565b6001600160a01b031690610837821515610ccf565b816000526002602052604060002054156108925760208161087a7f4aa1b13eb889e81dc57ed88a5ff965bca06398336b3b226039dfeb6348679f73931515610d8a565b836000526002825280604060002055604051908152a2005b60405162461bcd60e51b815260206004820152601860248201527f546f6b656e206e6f7420696e20666175636574206c69737400000000000000006044820152606490fd5b3461025d57602036600319011261025d576001600160a01b036108f8610bac565b16610904811515610ccf565b806000526002602052604060002054156109de5733600052600160205260406000205462015180810180911161020c5761094090421015610d13565b3360008181526001602090815260408083204290558483526002825280832054905163a9059cbb60e01b8152600481019490945260248401819052929182906044908290875af180156101fe576109c1575b506040519081527f45c201a59ac545000ead84f30b2db67da23353aa1d58ac522c48505412143ffa60203392a3005b6109d99060203d6020116101f7576101ea8183610c3b565b610992565b60405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206e6f7420617661696c61626c6520696e206661756365740000006044820152606490fd5b3461025d57602036600319011261025d57610a3c610bac565b6001600160a01b03166000818152600260205260408082205490516395d89b4160e01b815290918082600481875afa90918282610b59575b5050610b4e575060046000604051610a8d604082610c3b565b60078152662aa725a727aba760c91b6020820152935b6040516306fdde0360e01b815292839182905afa60009181610b29575b50610b205750610b1c604051610ad7604082610c3b565b600d81526c2ab735b737bbb7102a37b5b2b760991b60208201525b610b0e6040519485948552606060208601526060850190610be5565b908382036040850152610be5565b0390f35b610b1c90610af2565b610b479192503d806000833e610b3f8183610c3b565b810190610c5d565b9084610ac0565b600060049193610aa3565b610b6e9293503d8091833e610b3f8183610c3b565b908480610a74565b3461025d57602036600319011261025d576020906001600160a01b03610b9a610bac565b16600052600282526040600020548152f35b600435906001600160a01b038216820361025d57565b60005b838110610bd55750506000910152565b8181015183820152602001610bc5565b90602091610bfe81518092818552858086019101610bc2565b601f01601f1916010190565b600354811015610c2557600360005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761040057604052565b60208183031261025d5780519067ffffffffffffffff821161025d570181601f8201121561025d57805167ffffffffffffffff81116104005760405192610cae601f8301601f191660200185610c3b565b8184526020828401011161025d57610ccc9160208085019101610bc2565b90565b15610cd657565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b15610d1a57565b60405162461bcd60e51b815260206004820152602a60248201527f4d757374207761697420323420686f757273206265747765656e2066617563656044820152697420726571756573747360b01b6064820152608490fd5b9081602091031261025d5751801515810361025d5790565b15610d9157565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b6001600160a01b03166000908152600160205260409020548015610e23576201518081019081811161020c5781421015610e1c57429003620151800190811161020c5790565b5050600090565b50600090565b6000546001600160a01b03163303610e3d57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212208f06cb2070d368335aad9aa721606cce0a2b3ca5200bf4f8fd3aea6bd914b28f64736f6c634300081c0033";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
