/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Faucet,
  FaucetInterface,
} from "../../../contracts/Faucet.sol/Faucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "FaucetAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FaucetUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "FAUCET_COOLDOWN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "faucetAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "faucetHistory",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAllUserFaucetHistory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct Faucet.FaucetHistory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "faucetIndex",
        type: "uint256",
      },
    ],
    name: "getFaucetDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct Faucet.FaucetHistory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTimeUntilNextFaucet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalFaucetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserFaucetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getUserFaucetHistory",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256",
          },
        ],
        internalType: "struct Faucet.FaucetHistory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastFaucetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestAllFaucets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "requestFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "updateFaucetAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userFaucetIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346075573315605f5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3611591908161007b8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816314c47fbd14610fa5575080631f69565f14610e565780632a70754114610d015780633e6a099c14610c2757806349251a8314610bce5780634b7a3cfd14610b4c5780635fa7b58414610a29578063625f7f6214610a0b578063715018a6146109b2578063744e9b711461089b5780637bc1f6cc146108615780637d1d5d19146108435780638da5cb5b1461081a57806395ccea6714610771578063a95a50c114610737578063c6255626146106f5578063d3c7c2c714610629578063d48bfca714610475578063d4cd2f6b146103ae578063e21430d314610383578063f2fde38b146102fa578063ff12e27a1461028d5763ffc80e551461011c57600080fd5b34610288576000366003190112610288576003541561024d573360005260016020526040600020546201518081018091116102375761015d9042101561121e565b3360005260016020524260406000205560005b6003548110156102355761018381611039565b905460039190911b1c6001600160a01b03166000818152600260205260409020549190826101b7575b506001915001610170565b60405163a9059cbb60e01b815233600482015260248101849052926020846044816000865af1918215610229576001946101f7936101fd575b5033611421565b386101ac565b61021d9060203d8111610222575b6102158183611139565b81019061127d565b6101f0565b503d61020b565b6040513d6000823e3d90fd5b005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b81526020600482015260136024820152724e6f20746f6b656e7320617661696c61626c6560681b6044820152606490fd5b600080fd5b3461028857602036600319011261028857600435600454811015610288576102b660a0916110fe565b50600180831b0381541690600180841b0360018201541690600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b3461028857602036600319011261028857610313610fdb565b61031b611532565b6001600160a01b0316801561036d57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346102885760203660031901126102885760206103a66103a1610fdb565b6113dd565b604051908152f35b34610288576020366003190112610288576004356103ca6112f9565b50600454811015610430576103e96103e360a0926110fe565b50611388565b61042e60405180926080809160018060a01b03815116845260018060a01b03602082015116602085015260408101516040850152606081015160608501520151910152565bf35b60405162461bcd60e51b815260206004820152601a60248201527f46617563657420696e646578206f7574206f6620626f756e64730000000000006044820152606490fd5b346102885760203660031901126102885761048e610fdb565b610496611532565b6001600160a01b038116906104ac8215156111cd565b600354906000805b8381106105f6575b5015610596575b505060405163313ce56760e01b8152602081600481855afa90811561022957600091610553575b5060ff60001991160160ff81116102375760ff16604d811161023757600a0a806005029060058204036102375760207ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c91836000526002825280604060002055604051908152a2005b6020813d60201161058e575b8161056c60209383611139565b8101031261058a57519060ff821682036105875750826104ea565b80fd5b5080fd5b3d915061055f565b600160401b8210156105e0576105b58260016105d99401600355611039565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b81806104c3565b634e487b7160e01b600052604160045260246000fd5b8461060082611039565b905460039190911b1c6001600160a01b03161461061f576001016104b4565b50506001846104bc565b34610288576000366003190112610288576040518060206003549283815201809260036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9060005b8181106106d6575050508161068a910382611139565b6040519182916020830190602084525180915260408301919060005b8181106106b4575050500390f35b82516001600160a01b03168452859450602093840193909201916001016106a6565b82546001600160a01b0316845260209093019260019283019201610674565b34610288576020366003190112610288576004356003548110156102885761071e602091611039565b905460405160039290921b1c6001600160a01b03168152f35b34610288576020366003190112610288576001600160a01b03610758610fdb565b1660005260056020526020604060002054604051908152f35b34610288576040366003190112610288576107f2602061078f610fdb565b6024359061079b611532565b6001600160a01b03166107af8115156111cd565b6107ba821515611295565b6000805460405163a9059cbb60e01b81526001600160a01b039091166004820152602481019390935291938492839182906044820190565b03925af180156102295761080257005b6102359060203d602011610222576102158183611139565b34610288576000366003190112610288576000546040516001600160a01b039091168152602090f35b34610288576000366003190112610288576020604051620151808152f35b34610288576020366003190112610288576001600160a01b03610882610fdb565b1660005260016020526020604060002054604051908152f35b34610288576060366003190112610288576108b4610fdb565b6001600160a01b03166000908152600560205260409020805460243591908083101561096d57826108fa916108eb60443583611211565b90808211610965575b506113d0565b9061090482611324565b9260005b838110610921576040518061091d8782611082565b0390f35b806109496103e361093d61093760019587611211565b8761106a565b90549060031b1c6110fe565b6109538288611374565b5261095e8187611374565b5001610908565b9050856108f4565b60405162461bcd60e51b815260206004820152601960248201527f537461727420696e646578206f7574206f6620626f756e6473000000000000006044820152606490fd5b34610288576000366003190112610288576109cb611532565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610288576000366003190112610288576020600454604051908152f35b3461028857602036600319011261028857610a42610fdb565b610a4a611532565b6001600160a01b0316610a5e8115156111cd565b60005b6003549081811015610b455782610a7782611039565b905460039190911b1c6001600160a01b031614610a98576001915001610a61565b6000198201918211610237576105b5610ab3610acb93611039565b905460039190911b1c6001600160a01b031691611039565b6003548015610b2f5760001901610ae181611039565b81546001600160a01b03600392831b1b1916909155555b806000526002602052600060408120557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3600080a2005b634e487b7160e01b600052603160045260246000fd5b5050610af8565b34610288576020366003190112610288576001600160a01b03610b6d610fdb565b16600052600560205260406000208054610b8681611324565b9160005b828110610b9f576040518061091d8682611082565b80610bb26103e361093d6001948661106a565b610bbc8287611374565b52610bc78186611374565b5001610b8a565b3461028857604036600319011261028857610be7610fdb565b6001600160a01b031660009081526005602052604090208054602435919082101561028857602091610c189161106a565b90549060031b1c604051908152f35b3461028857604036600319011261028857610c40610fdb565b60243590610c4c611532565b6001600160a01b031690610c618215156111cd565b81600052600260205260406000205415610cbc57602081610ca47f4aa1b13eb889e81dc57ed88a5ff965bca06398336b3b226039dfeb6348679f73931515611295565b836000526002825280604060002055604051908152a2005b60405162461bcd60e51b815260206004820152601860248201527f546f6b656e206e6f7420696e20666175636574206c69737400000000000000006044820152606490fd5b3461028857602036600319011261028857610d1a610fdb565b6001600160a01b03811690610d308215156111cd565b81600052600260205260406000205415610e115733600052600160205260406000205462015180810180911161023757610d6c9042101561121e565b3360008181526001602090815260408083204290558583526002825280832054905163a9059cbb60e01b8152600481019490945260248401819052939183906044908290885af190811561022957610dcb928492610df9575033611421565b6040519081527f45c201a59ac545000ead84f30b2db67da23353aa1d58ac522c48505412143ffa60203392a3005b61021d9060203d602011610222576102158183611139565b60405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206e6f7420617661696c61626c6520696e206661756365740000006044820152606490fd5b3461028857602036600319011261028857610e6f610fdb565b6001600160a01b03166000818152600260205260408082205490516395d89b4160e01b815290918082600481875afa90918282610f88575b5050610f7d575060046000604051610ec0604082611139565b60078152662aa725a727aba760c91b6020820152935b6040516306fdde0360e01b815292839182905afa60009181610f58575b50610f4f575061091d604051610f0a604082611139565b600d81526c2ab735b737bbb7102a37b5b2b760991b60208201525b610f416040519485948552606060208601526060850190611014565b908382036040850152611014565b61091d90610f25565b610f769192503d806000833e610f6e8183611139565b81019061115b565b9084610ef3565b600060049193610ed6565b610f9d9293503d8091833e610f6e8183611139565b908480610ea7565b34610288576020366003190112610288576020906001600160a01b03610fc9610fdb565b16600052600282526040600020548152f35b600435906001600160a01b038216820361028857565b60005b8381106110045750506000910152565b8181015183820152602001610ff4565b9060209161102d81518092818552858086019101610ff1565b601f01601f1916010190565b60035481101561105457600360005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156110545760005260206000200190600090565b602060408183019282815284518094520192019060005b8181106110a65750505090565b909192602060a0826110f360019488516080809160018060a01b03815116845260018060a01b03602082015116602085015260408101516040850152606081015160608501520151910152565b019401929101611099565b6004548110156110545760046000526005602060002091020190600090565b60a0810190811067ffffffffffffffff8211176105e057604052565b90601f8019910116810190811067ffffffffffffffff8211176105e057604052565b6020818303126102885780519067ffffffffffffffff8211610288570181601f8201121561028857805167ffffffffffffffff81116105e057604051926111ac601f8301601f191660200185611139565b81845260208284010111610288576111ca9160208085019101610ff1565b90565b156111d457565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152606490fd5b9190820180921161023757565b1561122557565b60405162461bcd60e51b815260206004820152602a60248201527f4d757374207761697420323420686f757273206265747765656e2066617563656044820152697420726571756573747360b01b6064820152608490fd5b90816020910312610288575180151581036102885790565b1561129c57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b67ffffffffffffffff81116105e05760051b60200190565b604051906113068261111d565b60006080838281528260208201528260408201528260608201520152565b9061132e826112e1565b61133b6040519182611139565b828152809261134c601f19916112e1565b019060005b82811061135d57505050565b6020906113686112f9565b82828501015201611351565b80518210156110545760209160051b010190565b906040516113958161111d565b82546001600160a01b039081168252600184015416602082015260028301546040820152600383015460608201526004909201546080830152565b9190820391821161023757565b6001600160a01b0316600090815260016020526040902054801561141b57620151808101809111610237578042101561141b576111ca9042906113d0565b50600090565b6040519061142e8261111d565b60018060a01b031692838252602082019260018060a01b0316835260408201908152606082014281526080830191438352600454600160401b8110156105e05780600161147e92016004556110fe565b95909561151c57935185546001600160a01b03199081166001600160a01b0392831617875594516001870180549096169116179093559151600284015590516003830155516004918201556000918252600560205260409091209054600019810191908211610237578054600160401b8110156105e0576115049160018201815561106a565b819291549060031b91821b91600019901b1916179055565b634e487b7160e01b600052600060045260246000fd5b6000546001600160a01b0316330361154657565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220a77a0149cb55bb19f990ef1c1bf481f3b59a1ebedb52ae96e622e0d66080988164736f6c634300081c0033";

type FaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Faucet__factory extends ContractFactory {
  constructor(...args: FaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Faucet> {
    return super.deploy(overrides || {}) as Promise<Faucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Faucet {
    return super.attach(address) as Faucet;
  }
  override connect(signer: Signer): Faucet__factory {
    return super.connect(signer) as Faucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FaucetInterface {
    return new utils.Interface(_abi) as FaucetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Faucet {
    return new Contract(address, _abi, signerOrProvider) as Faucet;
  }
}
