/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CreatePool,
  CreatePoolInterface,
} from "../../../contracts/CreatePool.sol/CreatePool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "int24",
        name: "tickSpacing",
        type: "int24",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolManager",
    outputs: [
      {
        internalType: "contract IPoolManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e1d380380610e1d833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610d06806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806321fb35061461003b578063dc4c90d31461006b575b600080fd5b610055600480360381019061005091906106f8565b610089565b604051610062919061078c565b60405180910390f35b6100736102d3565b6040516100809190610806565b60405180910390f35b6000808573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16106100c557856100c7565b865b905060008673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16106101045787610106565b865b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166332ff3fbc83838989896040518663ffffffff1660e01b815260040161016995949392919061085d565b6020604051808303816000875af19250505080156101a557506040513d601f19601f820116820180604052508101906101a291906108dc565b60015b6102c4576101b1610916565b806308c379a00361022c57506101c56109a9565b806101d0575061022e565b806040516020016101e19190610af6565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102239190610b62565b60405180910390fd5b505b3d806000811461025a576040519150601f19603f3d011682016040523d82523d6000602084013e61025f565b606091505b50610269816102f7565b6040516020016102799190610bd0565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bb9190610b62565b60405180910390fd5b80935050505095945050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060006040518060400160405280601081526020017f303132333435363738396162636465660000000000000000000000000000000081525090506000600284516103439190610c2b565b600261034f9190610c6d565b67ffffffffffffffff81111561036857610367610949565b5b6040519080825280601f01601f19166020018201604052801561039a5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103d2576103d1610ca1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061043657610435610ca1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060005b84518110156105e05782600486838151811061048757610486610ca1565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916901c60f81c60ff16815181106104cd576104cc610ca1565b5b602001015160f81c60f81b826002836104e69190610c2b565b60026104f29190610c6d565b8151811061050357610502610ca1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535082600f60f81b86838151811061054b5761054a610ca1565b5b602001015160f81c60f81b1660f81c60ff168151811061056e5761056d610ca1565b5b602001015160f81c60f81b826002836105879190610c2b565b60036105939190610c6d565b815181106105a4576105a3610ca1565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050610468565b508092505050919050565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610625826105fa565b9050919050565b6106358161061a565b811461064057600080fd5b50565b6000813590506106528161062c565b92915050565b600062ffffff82169050919050565b61067081610658565b811461067b57600080fd5b50565b60008135905061068d81610667565b92915050565b60008160020b9050919050565b6106a981610693565b81146106b457600080fd5b50565b6000813590506106c6816106a0565b92915050565b6106d5816105fa565b81146106e057600080fd5b50565b6000813590506106f2816106cc565b92915050565b600080600080600060a08688031215610714576107136105f5565b5b600061072288828901610643565b955050602061073388828901610643565b94505060406107448882890161067e565b9350506060610755888289016106b7565b9250506080610766888289016106e3565b9150509295509295909350565b6000819050919050565b61078681610773565b82525050565b60006020820190506107a1600083018461077d565b92915050565b6000819050919050565b60006107cc6107c76107c2846105fa565b6107a7565b6105fa565b9050919050565b60006107de826107b1565b9050919050565b60006107f0826107d3565b9050919050565b610800816107e5565b82525050565b600060208201905061081b60008301846107f7565b92915050565b61082a8161061a565b82525050565b61083981610658565b82525050565b61084881610693565b82525050565b610857816105fa565b82525050565b600060a0820190506108726000830188610821565b61087f6020830187610821565b61088c6040830186610830565b610899606083018561083f565b6108a6608083018461084e565b9695505050505050565b6108b981610773565b81146108c457600080fd5b50565b6000815190506108d6816108b0565b92915050565b6000602082840312156108f2576108f16105f5565b5b6000610900848285016108c7565b91505092915050565b60008160e01c9050919050565b600060033d11156109355760046000803e610932600051610909565b90505b90565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61098182610938565b810181811067ffffffffffffffff821117156109a05761099f610949565b5b80604052505050565b600060443d10610a36576109bb6105eb565b60043d036004823e80513d602482011167ffffffffffffffff821117156109e3575050610a36565b808201805167ffffffffffffffff811115610a015750505050610a36565b80602083010160043d038501811115610a1e575050505050610a36565b610a2d82602001850186610978565b82955050505050505b90565b600081905092915050565b7f437265617465506f6f6c3a2072657665727420726561736f6e202d2000000000600082015250565b6000610a7a601c83610a39565b9150610a8582610a44565b601c82019050919050565b600081519050919050565b60005b83811015610ab9578082015181840152602081019050610a9e565b60008484015250505050565b6000610ad082610a90565b610ada8185610a39565b9350610aea818560208601610a9b565b80840191505092915050565b6000610b0182610a6d565b9150610b0d8284610ac5565b915081905092915050565b600082825260208201905092915050565b6000610b3482610a90565b610b3e8185610b18565b9350610b4e818560208601610a9b565b610b5781610938565b840191505092915050565b60006020820190508181036000830152610b7c8184610b29565b905092915050565b7f437265617465506f6f6c3a206c6f772d6c6576656c206572726f72202d200000600082015250565b6000610bba601e83610a39565b9150610bc582610b84565b601e82019050919050565b6000610bdb82610bad565b9150610be78284610ac5565b915081905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c3682610bf2565b9150610c4183610bf2565b9250828202610c4f81610bf2565b91508282048414831517610c6657610c65610bfc565b5b5092915050565b6000610c7882610bf2565b9150610c8383610bf2565b9250828201905080821115610c9b57610c9a610bfc565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212201b1c1e3160b832054382c8c73ee7a881a06697185a1d2db08c08cda18a3499e564736f6c634300081c0033";

type CreatePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreatePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreatePool__factory extends ContractFactory {
  constructor(...args: CreatePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreatePool> {
    return super.deploy(_poolManager, overrides || {}) as Promise<CreatePool>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolManager, overrides || {});
  }
  override attach(address: string): CreatePool {
    return super.attach(address) as CreatePool;
  }
  override connect(signer: Signer): CreatePool__factory {
    return super.connect(signer) as CreatePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreatePoolInterface {
    return new utils.Interface(_abi) as CreatePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreatePool {
    return new Contract(address, _abi, signerOrProvider) as CreatePool;
  }
}
