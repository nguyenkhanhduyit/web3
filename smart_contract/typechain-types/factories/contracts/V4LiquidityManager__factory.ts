/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  V4LiquidityManager,
  V4LiquidityManagerInterface,
} from "../../contracts/V4LiquidityManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "PoolId",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        indexed: false,
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "Currency",
            name: "currency0",
            type: "address",
          },
          {
            internalType: "Currency",
            name: "currency1",
            type: "address",
          },
          {
            internalType: "uint24",
            name: "fee",
            type: "uint24",
          },
          {
            internalType: "int24",
            name: "tickSpacing",
            type: "int24",
          },
          {
            internalType: "contract IHooks",
            name: "hooks",
            type: "address",
          },
        ],
        internalType: "struct PoolKey",
        name: "poolKey",
        type: "tuple",
      },
      {
        internalType: "int24",
        name: "tickLower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "tickUpper",
        type: "int24",
      },
      {
        internalType: "uint256",
        name: "amount0Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Desired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount0Min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Min",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolManager",
    outputs: [
      {
        internalType: "contract IPoolManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "unlockCallback",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100c457601f610eaa38819003918201601f19168301916001600160401b038311848410176100c9578084926020946040528339810103126100c457516001600160a01b038116908190036100c457801561007f57608052604051610dca90816100e08239608051818181606d0152818161026c015261078c0152f35b60405162461bcd60e51b815260206004820152601c60248201527f496e76616c696420706f6f6c206d616e616765722061646472657373000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c9081633aecd0e314610bc25750806391dd73461461073b5780639b13a8f4146101315780639e281a981461009f5763dc4c90d31461005857600080fd5b3461009c578060031936011261009c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b503461009c57604036600319011261009c576100b9610c4d565b60405163a9059cbb60e01b81523360048201526024803590820152906020908290604490829086906001600160a01b03165af18015610126576100fa575080f35b61011b9060203d60201161011f575b6101138183610d0b565b810190610d2d565b5080f35b503d610109565b6040513d84823e3d90fd5b50366003190161016081126107375760a01361009c5760a4358060020b8091036107375760c435918260020b80930361009c5760e43561010435848412156106fd578115801580916106f4575b156106bd57610606575b80610544575b604051946001600160a01b036101a2610c4d565b166020870152602435946001600160a01b03861680870361054057604088015260443562ffffff811680820361053c576060890152606435908160020b8083036105385760808a0152608435916001600160a01b03831680840361048057978a610267989960a0839c9d01528560c08201528660e082015289610100820152876101208201526101243561014082015261014435610160820152610160815261024d61018082610d0b565b604051809981926348c8949160e01b835260048301610c9f565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af196871561052d578997610484575b506060878051810103126104805760208701519589606060408a015199015199808a10610420575b5090808a10610394575b50506000916040519a6102e88c610cd9565b6004356001600160a01b0381168103610390578c5260208c015260408b01526060808b01919091526080808b019390935260a0909920917fc4d0a6d54598f56f88011ed208c0acabc64926c7ed7c2cd8d46d026c89e6250991506001600160a01b03610352610d45565b16936001600160a01b03610364610d5b565b1695604051918983528a602084015260408301528b820152a46040519350835260208301526040820152f35b8b80fd5b6020906103e0906103b68c6001600160a01b036103af610d5b565b1692610d71565b60405163a9059cbb60e01b8152336004820152602481019190915293849283919082906044820190565b03925af18015610415576103f6575b89906102d6565b61040e9060203d60201161011f576101138183610d0b565b50386103ef565b6040513d8c823e3d90fd5b60209061043b906103b68c6001600160a01b036103af610d45565b03925af1801561047557908b9291610456575b9190916102cc565b61046e9060203d60201161011f576101138183610d0b565b503861044e565b6040513d8d823e3d90fd5b8880fd5b9096503d808a833e6104968183610d0b565b8101906020818303126105295780519067ffffffffffffffff8211610511570181601f820112156105295780519067ffffffffffffffff821161051557604051926104eb601f8401601f191660200185610d0b565b82845260208383010111610511579061050a9160208085019101610c7c565b95386102a4565b8a80fd5b634e487b7160e01b8b52604160045260248bfd5b8980fd5b6040513d8b823e3d90fd5b8780fd5b8680fd5b8580fd5b6001600160a01b03610554610d5b565b6040516323b872dd60e01b81523360048201523060248201526044810184905291602091839160649183918991165af19081156105fb5784916105dc575b5061018e5760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206661696c656420666f7220746f6b656e310000000000006044820152606490fd5b6105f5915060203d60201161011f576101138183610d0b565b38610592565b6040513d86823e3d90fd5b6001600160a01b03610616610d45565b6040516323b872dd60e01b81523360048201523060248201526044810185905291602091839160649183918991165af19081156105fb57849161069e575b506101885760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206661696c656420666f7220746f6b656e300000000000006044820152606490fd5b6106b7915060203d60201161011f576101138183610d0b565b38610654565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420616d6f756e747360881b6044820152606490fd5b5081151561017e565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964207469636b2072616e676560701b6044820152606490fd5b5080fd5b503461009c57602036600319011261009c5760043567ffffffffffffffff8111610737573660238201121561073757806004013567ffffffffffffffff8111610b75578101366024820111610b75577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169033829003610b7d5761016083820312610b795760a09083900312610b75576040516107df81610cd9565b6107eb60248401610c68565b81526107f960448401610c68565b916020820192835260648401359362ffffff85168503610540576040830194855261082660848201610ccb565b906060840191825261083a60a48201610c68565b906080850191825261084e60c48201610ccb565b8861085b60e48401610ccb565b926101248101359061010401358015159081610b06575b8215159182610a9d575b610a3c575b506109d4575b5050604051906080820182811067ffffffffffffffff821117610515576040908152600291820b835292810b602083019081526001838501908152606084018c81528551632d35e7ed60e11b815299516001600160a01b0390811660048c01529a518b1660248b01529a5162ffffff1660448a01529551820b60648901529351909716608487015251860b60a4860152905190940b60c48401525160e48301529251610104820152610140610124820152610144810184905291829061016490829086905af190811561012657829161099d575b6109998260405190600160208301528060801d600f0b6040830152600f0b60608201526060815261098d608082610d0b565b60405191829182610c9f565b0390f35b90506040813d6040116109cc575b816109b860409383610d0b565b81010312610737576109999150513861095b565b3d91506109ab565b885160405163095ea7b360e01b81526001600160a01b038981166004830152602482019390935292602092849260449284929091165af1801561041557610a1d575b8990610887565b610a359060203d60201161011f576101138183610d0b565b5038610a16565b895160405163095ea7b360e01b81526001600160a01b038b81166004830152602482019390935291602091839160449183918991165af180156105fb571561088157610a969060203d60201161011f576101138183610d0b565b5038610881565b8b516001600160a01b03168a3b1561054057604051632961046560e21b815260048101919091528581602481838f5af1908115610afb578691610ae2575b505061087c565b81610aec91610d0b565b610af7578438610adb565b8480fd5b6040513d88823e3d90fd5b895192935090916001600160a01b0316883b15610b715760405190632961046560e21b825260048201528c81602481838d5af18015610b6657610b4e575b50908b9291610872565b8c610b5d919d9294939d610d0b565b9a909138610b44565b6040513d8f823e3d90fd5b8c80fd5b8280fd5b8380fd5b60405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920706f6f6c206d616e616765722063616e2063616c6c2074686973006044820152606490fd5b905034610737576020366003190112610737576020816024816001600160a01b03610beb610c4d565b6370a0823160e01b8352306004840152165afa908115610126578291610c17575b602082604051908152f35b90506020813d602011610c45575b81610c3260209383610d0b565b8101031261073757602091505138610c0c565b3d9150610c25565b600435906001600160a01b0382168203610c6357565b600080fd5b35906001600160a01b0382168203610c6357565b60005b838110610c8f5750506000910152565b8181015183820152602001610c7f565b60409160208252610cbf8151809281602086015260208686019101610c7c565b601f01601f1916010190565b35908160020b8203610c6357565b60a0810190811067ffffffffffffffff821117610cf557604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610cf557604052565b90816020910312610c6357518015158103610c635790565b6004356001600160a01b0381168103610c635790565b6024356001600160a01b0381168103610c635790565b91908203918211610d7e57565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a7a4b4c9a20180f9d15060652685d8005a56003f2183e03100758a556ff7d7f964736f6c634300081c0033";

type V4LiquidityManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: V4LiquidityManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class V4LiquidityManager__factory extends ContractFactory {
  constructor(...args: V4LiquidityManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _poolManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<V4LiquidityManager> {
    return super.deploy(
      _poolManager,
      overrides || {}
    ) as Promise<V4LiquidityManager>;
  }
  override getDeployTransaction(
    _poolManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolManager, overrides || {});
  }
  override attach(address: string): V4LiquidityManager {
    return super.attach(address) as V4LiquidityManager;
  }
  override connect(signer: Signer): V4LiquidityManager__factory {
    return super.connect(signer) as V4LiquidityManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): V4LiquidityManagerInterface {
    return new utils.Interface(_abi) as V4LiquidityManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): V4LiquidityManager {
    return new Contract(address, _abi, signerOrProvider) as V4LiquidityManager;
  }
}
